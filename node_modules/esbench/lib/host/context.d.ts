import { LogHandler } from "../profiling.js";
import { ESBenchConfig, NormalizedConfig } from "./config.js";
import { ESBenchResult } from "../connect.js";
import { SharedModeFilter } from "../utils.js";
export declare const logLevelPriority: {
    debug: number;
    info: number;
    warn: number;
    error: number;
    off: number;
};
export type LogLevel = keyof typeof logLevelPriority;
export interface FilterOptions {
    file?: string;
    builder?: string | RegExp;
    executor?: string | RegExp;
    name?: string | RegExp;
    shared?: string;
}
export interface NormalizedFilterOptions {
    file?: string;
    name: RegExp;
    builder: RegExp;
    executor: RegExp;
    shared: SharedModeFilter;
}
export declare class HostContext {
    readonly config: NormalizedConfig;
    readonly filter: NormalizedFilterOptions;
    readonly logHandler: LogHandler;
    previous: ESBenchResult;
    constructor(config: ESBenchConfig, filter?: FilterOptions);
    debug(message?: string): void;
    info(message?: string): void;
    warn(message?: string): void;
    error(message?: string): void;
}
