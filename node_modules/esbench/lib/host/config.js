import { identity } from "@kaciras/utilities/node";
import noBuild from "../builder/default.js";
import inProcess from "../executor/in-process.js";
import rawReporter from "../reporter/raw.js";
import textReporter from "../reporter/text.js";
/**
 * Type helper to mark the object as an ESBench config.
 */
export const defineConfig = (identity);
export function normalizeConfig(input) {
    if (input.toolchains?.length === 0) {
        throw new Error("No toolchains.");
    }
    const defaultDiff = "node_modules/.esbench/result.json";
    const config = {
        tempDir: ".esbench-tmp",
        logLevel: "debug",
        cleanTempDir: true,
        diff: defaultDiff,
        reporters: [rawReporter(defaultDiff), textReporter()],
        ...input,
        toolchains: [],
    };
    for (let toolchain of input.toolchains ?? [{}]) {
        toolchain = {
            include: ["./benchmark/**/*.[jt]s?(x)"],
            builders: [noBuild],
            executors: [inProcess],
            ...toolchain,
        };
        config.toolchains.push(toolchain);
        toolchain.builders = toolchain.builders.filter(Boolean);
        toolchain.executors = toolchain.executors.filter(Boolean);
        if (toolchain.builders?.length === 0) {
            throw new Error("No builders.");
        }
        if (toolchain.executors.length === 0) {
            throw new Error("No executors.");
        }
        if (toolchain.include?.length === 0) {
            throw new Error("No included files.");
        }
    }
    return config;
}
//# sourceMappingURL=config.js.map