import type { RollupOptions } from "rollup";
import type { InlineConfig } from "vite";
import { Builder } from "../host/toolchain.js";
/**
 * Transform suites with Rollup for benchmark, you have to install rollup and add plugins to perform Node resolving.
 */
export declare class RollupBuilder implements Builder {
    private readonly config;
    constructor(config?: RollupOptions);
    get name(): string;
    build(dir: string, files: string[]): Promise<void>;
}
/**
 * Transform suites with Rollup for benchmark, you have to install vite.
 */
export declare class ViteBuilder implements Builder {
    private readonly config?;
    /**
     * Create a new ViteBuilder, by default it build suites in library mode,
     * you can also provide a custom config.
     *
     * These options will be overridden:
     * - build.outDir
     * - build.rollupOptions.preserveEntrySignatures
     * - build.rollupOptions.input
     * - build.rollupOptions.output.entryFileNames
     *
     * ViteBuilder does not automatically resolve config from project root.
     */
    constructor(config?: InlineConfig);
    get name(): string;
    build(outDir: string, files: string[]): Promise<void>;
}
